{"version":3,"sources":["api/api.js","redux/reducer/users_reduser.js","redux/reducer/different_reducer.js","component/different/preloader/preloader.jsx","img/load_book.gif","serviceWorker.js","component/Menu/Menu.jsx","component/Menu/MenuConteiner.jsx","component/hoc/Suspense.jsx","redux/reducer/profile_reducer.js","component/Content/Profile/PostsBlock/Post/Post.jsx","component/Content/Profile/PostsBlock/PostsBlock.jsx","component/Content/Profile/PostsBlock/PostsBlockConteiner.jsx","component/Content/Profile/ProfileBlock/Status/Status.jsx","component/Content/Profile/ProfileBlock/ProfileBlock.jsx","component/Content/Profile/ProfileBlock/ProfileBlockContainer.jsx","component/Content/Profile/Profile.jsx","component/Content/Profile/ProfileContainer.jsx","App.js","redux/reducer/dialogs_reducer.js","redux/redux_store.js","index.js","component/Content/Profile/PostsBlock/PostsBlock.module.css","component/Content/Profile/PostsBlock/Post/Post.module.css","component/hoc/AuthRedirect.jsx","component/Content/Profile/ProfileBlock/ProfileBlock.module.css","component/Content/Profile/Profile.module.css","component/different/preloader/preloader.module.css"],"names":["instance","axios","baseURL","withCredentials","headers","globalAPI","getUsers","pageSize","currentPage","get","then","respons","data","unfollow","onID","delete","follow","post","profileInfo","id","setProfileMe","getProfileStatus","setStatus","status","put","login","email","password","rememberMe","captcha","logOut","getCaptchaUrl","FOLLOW_USER","SET_USER","TOTAL_COUNT","SET_CURRENT_PAGE","SET_TOGGLE_FOLLOWING","initionState","users","totalUsers","toggleFollowing","users_reduser","state","action","type","map","i","followed","newUsers","current","value","boolFollowing","followID","filter","actionCreatorUsers","totalCountNumber","thunkCreatorUsers","setUsersTC","usersLength","dispatch","a","actionCreatorDifferent","setLoaderAC","totalCount","items","newPageTC","bool","onMaxPage","pageNum","currentPageNum","followTC","resultCode","unfollowTC","LOADER","SET_MY_DATE","DELETE_MY_DATE","INITIALIZE","CAPTCHA","DELETE_CAPTCHA","initialState","imgAva","preloader","myDate","myID","loading","inizialization","different_reducer","newBool","date","url","setDateAC","deleteDateAC","inizializationAC","capthaUrlAC","deleteCaptchaUrl","thunkCreatorDifferent","setProfileInfoMeTC","setLoginTC","stopSubmit","_error","messages","logOutTC","inizializationTC","urlCaptcha","Preloader","props","className","style","box","lds_spinner","module","exports","Boolean","window","location","hostname","match","Menu","log","to","MenuConteinerAPI","React","memo","MenuConteiner","connect","differentPage","ReactSuspense","Component","Suspense","fallback","loadIMG","ADD_POST","SET_PROFILE","GET_STATUS","profile","boolDate","message","like","actionCreator","addPostAC","text","setProfileInfoAC","getProfileStatusAC","thunkCreatorProfile","getProfileInfoTC","urlID","getStatusTC","setStatusTC","newStatus","addTextPostTC","textPost","deleteErrorChangeTC","Posts","post__ava","src","onProfile","photos","large","alt","post__info","post__like","reduxForm","form","mapPosts","posts","Post","key","error","posts__error","onSubmit","handleSubmit","posts__form","posts__input","Field","posts__textarea","newPostTexts","placeholder","component","name","onChange","scrool","PostsConteiner","valueNewPost","profilePage","newPostText","Status","useState","editMode","setEditMode","useEffect","e","currentTarget","onBlur","onSetStatusTC","autoFocus","onDoubleClick","ProfileBlock","onClick","profile__flex_blog","profile__ava","profile__info","fullName","aboutMe","lookingForAJob","ProfileBlockConteinerAPI","params","onMyID","boolProfile","load","compose","auth","withRouter","AuthRedirect","Profile","ProfileBlockContainer","profile__posts","PostsBlockConteiner","ProfileContainer","Login","lazy","UsersConteiner","App","inizialize","path","render","from","loan","ADD_MESSAGES","userNameMessage","messageText","textMessage","reducers","combineReducers","length","messagesPage","usersPage","formReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","str","ReactDOM","StrictMode","getState","bind","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.eb3bba01.chunk.js","sourcesContent":["import * as axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': 'cf030fe2-6f9a-49e8-86a7-893fb44b9868',\r\n    },\r\n})\r\n\r\nexport const globalAPI = {\r\n    getUsers(pageSize, currentPage) {\r\n        return instance\r\n            .get(`users?count=${pageSize}&page=${currentPage}`)\r\n            .then((respons) => respons.data)\r\n    },\r\n    unfollow(onID) {\r\n        return instance.delete(`follow/${onID}`).then((respons) => respons.data)\r\n    },\r\n    follow(onID) {\r\n        return instance.post(`follow/${onID}`).then((respons) => respons.data)\r\n    },\r\n    profileInfo(id) {\r\n        return instance.get(`profile/${id}`).then((respons) => respons.data)\r\n    },\r\n    setProfileMe() {\r\n        return instance.get('auth/me').then((respons) => respons.data)\r\n    },\r\n    getProfileStatus(id) {\r\n        return instance.get(`profile/status/${id}`).then((respons) => respons)\r\n    },\r\n    setStatus(status) {\r\n        return instance\r\n            .put('profile/status', { status })\r\n            .then((respons) => respons)\r\n    },\r\n    login(email, password, rememberMe, captcha = null) {\r\n        return instance\r\n            .post('auth/login', { email, password, rememberMe, captcha })\r\n            .then((respons) => respons.data)\r\n    },\r\n    logOut() {\r\n        return instance.delete('auth/login').then((respons) => respons)\r\n    },\r\n    getCaptchaUrl() {\r\n        return instance\r\n            .get('/security/get-captcha-url')\r\n            .then((respons) => respons)\r\n    },\r\n}\r\n","import { globalAPI } from '../../api/api'\r\nimport { actionCreatorDifferent } from './different_reducer'\r\n\r\nconst FOLLOW_USER = 'social-network/users/FOLLOW_USER'\r\nconst SET_USER = 'social-network/users/GET_USER'\r\nconst TOTAL_COUNT = 'social-network/users/TOTAL_COUNT'\r\nconst SET_CURRENT_PAGE = 'social-network/users/SET_CURRENT_PAGE'\r\nconst SET_TOGGLE_FOLLOWING = 'social-network/users/SET_TOGGLE_FOLLOWING'\r\n\r\nlet initionState = {\r\n    users: [],\r\n    totalUsers: null,\r\n    currentPage: 1,\r\n    pageSize: 3,\r\n    toggleFollowing: [],\r\n}\r\n\r\nexport const users_reduser = (state = initionState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW_USER:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(i => {\r\n                    if (i.id === action.id) {\r\n                        i.followed ? (i.followed = false) : (i.followed = true)\r\n                        return { ...i }\r\n                    }\r\n                    return i\r\n                }),\r\n            }\r\n        case SET_USER:\r\n            return {\r\n                ...state,\r\n                users: action.newUsers,\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.current,\r\n            }\r\n        case TOTAL_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsers: action.value,\r\n            }\r\n        case SET_TOGGLE_FOLLOWING:\r\n            return {\r\n                ...state,\r\n                toggleFollowing: action.boolFollowing\r\n                    ? [...state.toggleFollowing, action.followID]\r\n                    : state.toggleFollowing.filter(id => {\r\n                          return id !== action.followID\r\n                      }),\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// ActionCreator\r\n\r\nlet actionCreatorUsers = {\r\n    onFollowUnfollowUserAC: id => {\r\n        return { type: FOLLOW_USER, id }\r\n    },\r\n\r\n    onSetUsersAC: newUsers => {\r\n        return { type: SET_USER, newUsers }\r\n    },\r\n\r\n    onSetTotalCountAC: totalCountNumber => {\r\n        return { type: TOTAL_COUNT, value: totalCountNumber }\r\n    },\r\n\r\n    onSetCurrentPageAC: current => {\r\n        return {\r\n            type: SET_CURRENT_PAGE,\r\n            current,\r\n        }\r\n    },\r\n\r\n    toggleFollowingProgressAC: (followID, boolFollowing) => {\r\n        return {\r\n            type: SET_TOGGLE_FOLLOWING,\r\n            followID,\r\n            boolFollowing,\r\n        }\r\n    },\r\n}\r\n\r\n// ThunkCreator\r\n\r\nexport let thunkCreatorUsers = {\r\n    setUsersTC: (usersLength, pageSize, currentPage) => async dispatch => {\r\n        if (usersLength === 0) {\r\n            dispatch(actionCreatorDifferent.setLoaderAC(true))\r\n            let data = await globalAPI.getUsers(pageSize, currentPage)\r\n            dispatch(actionCreatorDifferent.setLoaderAC(false))\r\n            dispatch(actionCreatorUsers.onSetTotalCountAC(data.totalCount))\r\n            dispatch(actionCreatorUsers.onSetUsersAC(data.items))\r\n        }\r\n    },\r\n\r\n    newPageTC: (bool, onMaxPage, pageNum) => async dispatch => {\r\n        let currentPageNum = bool\r\n            ? pageNum === onMaxPage()\r\n                ? pageNum\r\n                : pageNum + 1\r\n            : pageNum === 1\r\n            ? pageNum\r\n            : pageNum - 1\r\n\r\n        dispatch(actionCreatorUsers.onSetCurrentPageAC(currentPageNum))\r\n        dispatch(actionCreatorDifferent.setLoaderAC(true))\r\n        let data = await globalAPI.getUsers(\r\n            initionState.pageSize,\r\n            currentPageNum\r\n        )\r\n        dispatch(actionCreatorDifferent.setLoaderAC(false))\r\n        dispatch(actionCreatorUsers.onSetUsersAC(data.items))\r\n    },\r\n\r\n    followTC: onID => async dispatch => {\r\n        dispatch(actionCreatorUsers.toggleFollowingProgressAC(onID, true))\r\n        let date = await globalAPI.follow(onID)\r\n        if (date.resultCode === 0) {\r\n            dispatch(actionCreatorUsers.onFollowUnfollowUserAC(onID))\r\n            dispatch(actionCreatorUsers.toggleFollowingProgressAC(onID, false))\r\n        }\r\n    },\r\n\r\n    unfollowTC: onID => async dispatch => {\r\n        dispatch(actionCreatorUsers.toggleFollowingProgressAC(onID, true))\r\n        let date = await globalAPI.unfollow(onID)\r\n        if (date.resultCode === 0) {\r\n            dispatch(actionCreatorUsers.onFollowUnfollowUserAC(onID))\r\n            dispatch(actionCreatorUsers.toggleFollowingProgressAC(onID, false))\r\n        }\r\n    },\r\n}\r\n","import { globalAPI } from '../../api/api'\r\nimport { stopSubmit } from 'redux-form'\r\n\r\nconst LOADER = 'social-network/different/LOADER'\r\nconst SET_MY_DATE = 'social-network/different/SET_MY_DATE'\r\nconst DELETE_MY_DATE = 'social-network/different/DELETE_MY_DATE'\r\nconst INITIALIZE = 'social-network/different/INITIALIZE'\r\nconst CAPTCHA = 'social-network/different/CAPTCHA'\r\nconst DELETE_CAPTCHA = 'social-network/different/DELETE_CAPTCHA'\r\n\r\nlet initialState = {\r\n    imgAva: 'https://i.pinimg.com/originals/0c/a9/e2/0ca9e28dcb12dc698cfd2beda6d6fa64.jpg',\r\n    preloader: true,\r\n    myDate: null,\r\n    login: false,\r\n    myID: null,\r\n    loading: false,\r\n    inizialization: false,\r\n    getCaptchaUrl: null,\r\n}\r\n\r\nexport const different_reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LOADER:\r\n            return {\r\n                ...state,\r\n                preloader: action.newBool,\r\n            }\r\n        case SET_MY_DATE:\r\n            return {\r\n                ...state,\r\n                myDate: action.date.data,\r\n                login: !action.date.resultCode,\r\n                myID: action.date.data.id,\r\n                loading: true,\r\n            }\r\n        case DELETE_MY_DATE:\r\n            return {\r\n                ...state,\r\n                myDate: null,\r\n                login: false,\r\n                myID: null,\r\n            }\r\n        case INITIALIZE:\r\n            return {\r\n                ...state,\r\n                inizialization: true,\r\n            }\r\n        case CAPTCHA:\r\n            return {\r\n                ...state,\r\n                getCaptchaUrl: action.url,\r\n            }\r\n        case DELETE_CAPTCHA:\r\n            return {\r\n                ...state,\r\n                getCaptchaUrl: null,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//Action Creator\r\n\r\nexport let actionCreatorDifferent = {\r\n    setLoaderAC: (newBool) => {\r\n        return {\r\n            type: LOADER,\r\n            newBool,\r\n        }\r\n    },\r\n\r\n    setDateAC: (date) => {\r\n        return {\r\n            type: SET_MY_DATE,\r\n            date,\r\n        }\r\n    },\r\n\r\n    deleteDateAC: () => {\r\n        return {\r\n            type: DELETE_MY_DATE,\r\n        }\r\n    },\r\n\r\n    inizializationAC: () => {\r\n        return {\r\n            type: INITIALIZE,\r\n        }\r\n    },\r\n    capthaUrlAC: (url) => {\r\n        return {\r\n            type: CAPTCHA,\r\n            url,\r\n        }\r\n    },\r\n    deleteCaptchaUrl: () => {\r\n        return {\r\n            type: DELETE_CAPTCHA,\r\n        }\r\n    },\r\n}\r\n\r\n// ThunkCreator\r\n\r\nexport let thunkCreatorDifferent = {\r\n    setProfileInfoMeTC: () => async (dispatch) => {\r\n        return await globalAPI.setProfileMe().then((date) => {\r\n            dispatch(actionCreatorDifferent.setDateAC(date))\r\n        })\r\n    },\r\n\r\n    setLoginTC: (email, password, rememberMe, captcha) => async (dispatch) => {\r\n        let date = await globalAPI.login(email, password, rememberMe, captcha)\r\n        if (date.resultCode === 0) {\r\n            globalAPI.setProfileMe().then((date) => {\r\n                dispatch(actionCreatorDifferent.setDateAC(date))\r\n                dispatch(actionCreatorDifferent.deleteCaptchaUrl())\r\n            })\r\n        } else {\r\n            if (date.resultCode === 10) {\r\n                dispatch(thunkCreatorDifferent.getCaptchaUrl())\r\n            }\r\n            dispatch(stopSubmit('login', { _error: date.messages[0] }))\r\n        }\r\n    },\r\n\r\n    logOutTC: () => async (dispatch) => {\r\n        await globalAPI.logOut()\r\n        dispatch(actionCreatorDifferent.deleteDateAC())\r\n    },\r\n\r\n    inizializationTC: () => async (dispatch) => {\r\n        await dispatch(thunkCreatorDifferent.setProfileInfoMeTC())\r\n        dispatch(actionCreatorDifferent.inizializationAC())\r\n    },\r\n    getCaptchaUrl: () => async (dispatch) => {\r\n        const respons = await globalAPI.getCaptchaUrl()\r\n        const urlCaptcha = respons.data.url\r\n        dispatch(actionCreatorDifferent.capthaUrlAC(urlCaptcha))\r\n    },\r\n}\r\n\r\n// let setProfileInfoMeTC = () => {\r\n//     return thunkCreatorDifferent.setProfileInfoMeTC()\r\n// }\r\n","import React from 'react'\r\nimport style from './preloader.module.css'\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n        <div className={style.box}>\r\n            <div className={style.lds_spinner}>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader\r\n","module.exports = __webpack_public_path__ + \"static/media/load_book.c2173abd.gif\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n        // [::1] is the IPv6 localhost address.\r\n        window.location.hostname === '[::1]' ||\r\n        // 127.0.0.0/8 are considered localhost for IPv4.\r\n        window.location.hostname.match(\r\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n        )\r\n)\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then((registration) => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error during service worker registration:', error)\r\n        })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: { 'Service-Worker': 'script' },\r\n    })\r\n        .then((response) => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null &&\r\n                    contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then((registration) => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then((registration) => {\r\n                registration.unregister()\r\n            })\r\n            .catch((error) => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './Menu.css'\r\n\r\nconst Menu = ({ log }) => {\r\n    return (\r\n        <nav className='.nav'>\r\n            <div>\r\n                <NavLink to='/profile' className='menu__element'>\r\n                    {log ? 'Profile' : 'Sign IN'}\r\n                </NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to='/users' className='menu__element'>\r\n                    Users\r\n                </NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Menu\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Menu from './Menu'\r\n\r\nconst MenuConteinerAPI = React.memo((props) => {\r\n    return <Menu {...props} />\r\n})\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        log: state.differentPage.login,\r\n    }\r\n}\r\n\r\nconst MenuConteiner = connect(mapStateToProps, {})(MenuConteinerAPI)\r\n\r\nexport default MenuConteiner\r\n","import React from 'react'\r\nimport Preloader from '../different/preloader/preloader'\r\nimport loadIMG from './../../img/load_book.gif'\r\n\r\nexport const ReactSuspense = (Component) => (props) => {\r\n    return (\r\n        <React.Suspense fallback={<Preloader loading={loadIMG} />}>\r\n            <Component {...props} />\r\n        </React.Suspense>\r\n    )\r\n}\r\n","import { stopSubmit } from 'redux-form'\r\nimport { globalAPI } from '../../api/api'\r\nimport { actionCreatorDifferent } from './different_reducer'\r\n// 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\r\nconst ADD_POST = 'social-network/profile/ADD_POST'\r\nconst SET_PROFILE = 'social-network/profile/SET_PROFILE'\r\nconst GET_STATUS = 'social-network/profile/GET_STATUS'\r\n\r\nlet initialState = {\r\n    profile: null,\r\n    boolDate: false,\r\n    post: [\r\n        { message: 'New post!', like: 2, id: 0 },\r\n        { message: \"I'm learn Java!\", like: 5, id: 1 },\r\n        { message: \"I'm learn Python!\", like: 33, id: 2 },\r\n        { message: 'I want programmes!', like: 15, id: 3 },\r\n    ],\r\n}\r\n\r\nexport const profile_reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            return {\r\n                ...state,\r\n                post: [\r\n                    ...state.post,\r\n                    {\r\n                        message: action.text,\r\n                        like: 0,\r\n                        id: { ...(state.post[state.post.length - 1].id + 1) },\r\n                    },\r\n                ],\r\n                newPostText: '',\r\n            }\r\n        }\r\n        case SET_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.date,\r\n                boolDate: true,\r\n            }\r\n        }\r\n        case GET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.date,\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// action Creator\r\n\r\nlet actionCreator = {\r\n    addPostAC: text => {\r\n        return { type: ADD_POST, text }\r\n    },\r\n    setProfileInfoAC: date => {\r\n        return { type: SET_PROFILE, date }\r\n    },\r\n\r\n    getProfileStatusAC: date => {\r\n        return { type: GET_STATUS, date }\r\n    },\r\n}\r\n\r\n// thunk creator\r\n\r\nexport let thunkCreatorProfile = {\r\n    getProfileInfoTC: (urlID, myID) => async dispatch => {\r\n        if (!urlID && !myID) {\r\n            let respons = await globalAPI.setProfileMe()\r\n            dispatch(actionCreator.actionCreatorDifferent.setDateAC(respons))\r\n            let data = await globalAPI.profileInfo(respons.data.id)\r\n            dispatch(actionCreator.setProfileInfoAC(data))\r\n        } else {\r\n            let data = await globalAPI.profileInfo(!urlID ? myID : urlID)\r\n            dispatch(actionCreator.setProfileInfoAC(data))\r\n        }\r\n    },\r\n    getStatusTC: (urlID, myID) => async dispatch => {\r\n        if (!urlID && !myID) {\r\n            let respons = await globalAPI.setProfileMe()\r\n            dispatch(actionCreatorDifferent.setDateAC(respons))\r\n            let date = await globalAPI.getProfileStatus(respons.data.id)\r\n            dispatch(actionCreator.getProfileStatusAC(date.data))\r\n        } else {\r\n            let date = await globalAPI.getProfileStatus(!urlID ? myID : urlID)\r\n            if (!date.data) {\r\n                dispatch(actionCreator.getProfileStatusAC('No status!'))\r\n            } else {\r\n                dispatch(actionCreator.getProfileStatusAC(date.data))\r\n            }\r\n        }\r\n    },\r\n    setStatusTC: newStatus => async dispatch => {\r\n        if (!!newStatus) {\r\n            let date = await globalAPI.setStatus(newStatus)\r\n            if (date.data.resultCode === 0) {\r\n                dispatch(actionCreator.getProfileStatusAC(newStatus))\r\n            }\r\n        }\r\n    },\r\n    addTextPostTC: textPost => dispatch => {\r\n        if (!textPost) {\r\n            dispatch(\r\n                stopSubmit('post', { _error: 'Unable to create empty post' })\r\n            )\r\n        } else {\r\n            dispatch(actionCreator.addPostAC(textPost))\r\n        }\r\n    },\r\n\r\n    deleteErrorChangeTC: () => dispatch => {\r\n        dispatch(stopSubmit('post', { _error: null }))\r\n    },\r\n}\r\n","import React from 'react'\r\nimport style from './Post.module.css'\r\n\r\nconst Posts = (props) => {\r\n    return (\r\n        <div className={style.post}>\r\n            <div className={style.post__ava}>\r\n                <img\r\n                    src={\r\n                        !props.onProfile.photos.large\r\n                            ? 'https://cdn.iconscout.com/icon/free/png-512/laptop-user-1-1179329.png'\r\n                            : props.onProfile.photos.large\r\n                    }\r\n                    alt=''\r\n                />\r\n            </div>\r\n            <div className={style.post__info}>\r\n                <p>{props.text}</p>\r\n                <div className={style.post__like}>{props.like}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Posts\r\n","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport Posts from './Post/Post'\r\nimport style from './PostsBlock.module.css'\r\n\r\nconst PostsBlock = (props) => {\r\n    let mapPosts = props.posts.map((i) => {\r\n        return (\r\n            <Posts\r\n                onProfile={props.onProfile}\r\n                text={i.message}\r\n                key={i.id}\r\n                like={i.like}\r\n            />\r\n        )\r\n    })\r\n    return (\r\n        <>\r\n            {!props.error ? (\r\n                ''\r\n            ) : (\r\n                <div className={style.posts__error}>{props.error}</div>\r\n            )}\r\n            <form onSubmit={props.handleSubmit} className={style.posts__form}>\r\n                <div className={style.posts__input}>\r\n                    <Field\r\n                        className={style.posts__textarea}\r\n                        value={props.newPostTexts}\r\n                        placeholder='New post!'\r\n                        component='textarea'\r\n                        name='textPost'\r\n                        onChange={props.deleteErrorChangeTC}\r\n                    />\r\n                </div>\r\n                <button className='button'>Add post</button>\r\n            </form>\r\n            <div className={style.scrool}>{mapPosts}</div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default reduxForm({ form: 'post' })(PostsBlock)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { thunkCreatorProfile } from '../../../../redux/reducer/profile_reducer'\r\nimport PostsBlock from './PostsBlock'\r\n\r\nconst PostsConteiner = React.memo((props) => {\r\n    const addTextPost = (valueNewPost) => {\r\n        props.addTextPostTC(valueNewPost.textPost)\r\n    }\r\n    return <PostsBlock onSubmit={addTextPost} {...props} />\r\n})\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        newPostTexts: state.profilePage.newPostText,\r\n        posts: state.profilePage.post,\r\n        imgAva: state.differentPage.imgAva,\r\n        onProfile: state.profilePage.profile,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { ...thunkCreatorProfile })(\r\n    PostsConteiner\r\n)\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nconst Status = React.memo(props => {\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(props.status)\r\n    \r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const onStatusChange = e => {\r\n        if (e.currentTarget.value !== status) {\r\n            setStatus(e.currentTarget.value)\r\n        }\r\n    }\r\n\r\n    const activeEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactiveEditMode = () => {\r\n        setEditMode(false)\r\n        if (status !== props.status) {\r\n            props.onSetStatusTC(status)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {editMode ? (\r\n                <div>\r\n                    <input\r\n                        onChange={onStatusChange}\r\n                        value={status}\r\n                        onBlur={() => {\r\n                            deactiveEditMode()\r\n                        }}\r\n                        autoFocus={true}\r\n                    />\r\n                </div>\r\n            ) : (\r\n                <div>\r\n                    <span\r\n                        onDoubleClick={() => {\r\n                            activeEditMode()\r\n                        }}\r\n                    >\r\n                        {props.status}\r\n                    </span>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Status\r\n","import React from 'react'\r\nimport style from './ProfileBlock.module.css'\r\nimport Status from './Status/Status'\r\n\r\nconst ProfileBlock = React.memo((props) => {\r\n    return (\r\n        <>\r\n            <button onClick={props.logOutTC} className='button'>\r\n                log out\r\n            </button>\r\n            <div className={style.profile__flex_blog}>\r\n                <div className={style.profile__ava}>\r\n                    <img\r\n                        src={\r\n                            !props.onProfile.photos.large\r\n                                ? 'https://cdn.iconscout.com/icon/free/png-512/laptop-user-1-1179329.png'\r\n                                : props.onProfile.photos.large\r\n                        }\r\n                        alt='#'\r\n                    />\r\n                </div>\r\n                <div className={style.profile__info}>\r\n                    <h2>{props.onProfile.fullName}</h2>\r\n                    <p>\r\n                        {!props.onProfile.aboutMe\r\n                            ? 'Nol'\r\n                            : props.onProfile.aboutMe}\r\n                    </p>\r\n                    <p>\r\n                        {props.onProfile.lookingForAJob === true\r\n                            ? 'Ищу работу'\r\n                            : 'Не ищу'}\r\n                    </p>\r\n                    <Status\r\n                        status={props.status}\r\n                        onSetStatusTC={props.setStatusTC}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n})\r\n\r\nexport default ProfileBlock\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { thunkCreatorProfile } from '../../../../redux/reducer/profile_reducer'\r\nimport { thunkCreatorDifferent } from '../../../../redux/reducer/different_reducer'\r\nimport ProfileBlock from './ProfileBlock'\r\nimport Preloader from '../../../different/preloader/preloader'\r\nimport load from './../../../../img/load_book.gif'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { AuthRedirect } from '../../../hoc/AuthRedirect'\r\nimport { compose } from 'redux'\r\n\r\nconst ProfileBlockConteinerAPI = React.memo((props) => {\r\n    useEffect(() => {\r\n        props.getProfileInfoTC(props.match.params.id, props.onMyID)\r\n        props.getStatusTC(props.match.params.id, props.onMyID)\r\n    }, [props, props.status, props.boolProfile])\r\n    return !props.boolProfile || !props.status ? (\r\n        <>{<Preloader loading={load} />}</>\r\n    ) : (\r\n        <ProfileBlock {...props} />\r\n    )\r\n})\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        status: state.profilePage.status,\r\n        onProfile: state.profilePage.profile,\r\n        boolProfile: state.profilePage.boolDate,\r\n        onMyID: state.differentPage.myID,\r\n        log: state.differentPage.login,\r\n        auth: state.differentPage.login,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        ...thunkCreatorProfile,\r\n        ...thunkCreatorDifferent,\r\n    }),\r\n    withRouter,\r\n    AuthRedirect\r\n)(ProfileBlockConteinerAPI)\r\n","import React from 'react'\r\nimport PostsBlockConteiner from './PostsBlock/PostsBlockConteiner'\r\nimport ProfileBlockContainer from './ProfileBlock/ProfileBlockContainer'\r\nimport style from './Profile.module.css'\r\nimport Preloader from './../../different/preloader/preloader'\r\nimport load from './../../../img/load_book.gif'\r\n\r\nconst Profile = React.memo((props) => {\r\n    return !props.boolProfile || !props.status ? (\r\n        <>{<Preloader loading={load} />}</>\r\n    ) : (\r\n        <div className={style.profile}>\r\n            <div className={style.profile__info}>\r\n                <ProfileBlockContainer />\r\n            </div>\r\n            <div className={style.profile__posts}>\r\n                <PostsBlockConteiner />\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Profile\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { thunkCreatorProfile } from './../../../redux/reducer/profile_reducer'\r\nimport { thunkCreatorDifferent } from './../../../redux/reducer/different_reducer'\r\nimport Preloader from './../../different/preloader/preloader'\r\nimport load from './../../../img/load_book.gif'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { AuthRedirect } from './../../hoc/AuthRedirect'\r\nimport { compose } from 'redux'\r\nimport Profile from './Profile'\r\n\r\nconst ProfileContainer = React.memo((props) => {\r\n    useEffect(() => {\r\n        props.getProfileInfoTC(props.match.params.id, props.onMyID)\r\n        props.getStatusTC(props.match.params.id, props.onMyID)\r\n    }, [props, props.status, props.boolProfile])\r\n    return !props.boolProfile || !props.status ? (\r\n        <>{<Preloader loading={load} />}</>\r\n    ) : (\r\n        <Profile {...props} />\r\n    )\r\n})\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        status: state.profilePage.status,\r\n        onProfile: state.profilePage.profile,\r\n        boolProfile: state.profilePage.boolDate,\r\n        onMyID: state.differentPage.myID,\r\n        log: state.differentPage.login,\r\n        auth: state.differentPage.login,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        ...thunkCreatorProfile,\r\n        ...thunkCreatorDifferent,\r\n    }),\r\n    withRouter,\r\n    AuthRedirect\r\n)(ProfileContainer)\r\n","import React, { useEffect } from 'react'\r\nimport { Route, Switch, Redirect } from 'react-router-dom'\r\nimport './App.css'\r\nimport MenuConteiner from './component/Menu/MenuConteiner'\r\nimport { connect } from 'react-redux'\r\nimport { thunkCreatorDifferent } from './redux/reducer/different_reducer'\r\nimport { withRouter } from 'react-router'\r\nimport Preloader from './component/different/preloader/preloader'\r\nimport loan from './img/load_book.gif'\r\nimport { ReactSuspense } from './component/hoc/Suspense'\r\nimport ProfileContainer from './component/Content/Profile/ProfileContainer'\r\nconst Login = React.lazy(() => import('./component/Login/Login'))\r\nconst UsersConteiner = React.lazy(() =>\r\n    import('./component/Content/Users/UsersConteiner')\r\n)\r\n\r\nconst App = React.memo((props) => {\r\n    useEffect(() => {\r\n        props.inizializationTC()\r\n    }, [])\r\n    return !props.inizialize ? (\r\n        <Preloader loading={loan} />\r\n    ) : (\r\n        <div className='App'>\r\n            <header className='header'></header>\r\n            <main className='page'>\r\n                <div className='page__menu'>\r\n                    <MenuConteiner />\r\n                </div>\r\n                <div className='page__content'>\r\n                    <Switch>\r\n                        <Route\r\n                            path='/profile/:id?'\r\n                            render={() => <ProfileContainer />}\r\n                        />\r\n                        <Route\r\n                            path='/users'\r\n                            render={() => ReactSuspense(UsersConteiner)()}\r\n                        />\r\n                        <Route\r\n                            path='/login'\r\n                            render={() => ReactSuspense(Login)()}\r\n                        />\r\n                        <Redirect from='/' to='/profile' />\r\n                    </Switch>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    )\r\n})\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        inizialize: state.differentPage.inizialization,\r\n    }\r\n}\r\n\r\nexport default withRouter(\r\n    connect(mapStateToProps, { ...thunkCreatorDifferent })(App)\r\n)\r\n","import { stopSubmit } from 'redux-form'\r\n\r\nconst ADD_MESSAGES = 'social-network/dialogs/ADD_MESSAGES'\r\n\r\nlet initialState = {\r\n    userNameMessage: [\r\n        { name: 'Jonson', id: '0' },\r\n        { name: 'Li', id: '1' },\r\n        { name: 'Max', id: '2' },\r\n        { name: 'Linda', id: '3' },\r\n        { name: 'Ron', id: '4' },\r\n    ],\r\n    messageText: [\r\n        { textMessage: 'New messages', id: 0 },\r\n        { textMessage: 'Message', id: 1 },\r\n        { textMessage: 'ns', id: 2 },\r\n    ],\r\n}\r\n\r\nexport const dialogs_reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGES:\r\n            return {\r\n                ...state,\r\n                messageText: [\r\n                    ...state.messageText,\r\n                    {\r\n                        textMessage: action.text,\r\n                        id: {\r\n                            ...(state.messageText[state.messageText.length - 1]\r\n                                .id + 1),\r\n                        },\r\n                    },\r\n                ],\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// Action Creator\r\n\r\nlet actionCreator = {\r\n    newMessagesClickAC: text => {\r\n        return {\r\n            type: ADD_MESSAGES,\r\n            text,\r\n        }\r\n    },\r\n}\r\n\r\n// Thunk Creator\r\n\r\nexport let thunkCreatorDialogs = {\r\n    addMessagesTC: text => dispatch => {\r\n        if (!text) {\r\n            dispatch(\r\n                stopSubmit('message', { _error: 'Unable to send empty post' })\r\n            )\r\n        } else {\r\n            dispatch(actionCreator.newMessagesClickAC(text))\r\n        }\r\n    },\r\n\r\n    deleteErrorTC: () => dispatch => {\r\n        dispatch(stopSubmit('message', { _error: null }))\r\n    },\r\n}\r\n","import { applyMiddleware, combineReducers, createStore } from 'redux'\r\nimport { dialogs_reducer } from './reducer/dialogs_reducer'\r\nimport { profile_reducer } from './reducer/profile_reducer'\r\nimport { different_reducer } from './reducer/different_reducer'\r\nimport { users_reduser } from './reducer/users_reduser'\r\nimport thunk from 'redux-thunk'\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profile_reducer,\r\n    messagesPage: dialogs_reducer,\r\n    differentPage: different_reducer,\r\n    usersPage: users_reduser,\r\n    form: formReducer,\r\n})\r\n\r\nlet store = createStore(reducers, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nwindow.str = store\r\n\r\nexport default store\r\n","import * as serviceWorker from './serviceWorker'\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport store from './redux/redux_store'\r\nimport { HashRouter } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <App\r\n                    state={store.getState()}\r\n                    dispatch={store.dispatch.bind(store)}\r\n                />\r\n            </Provider>\r\n        </HashRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts__form\":\"PostsBlock_posts__form__1_rqK\",\"posts__textarea\":\"PostsBlock_posts__textarea__1jH-L\",\"posts__error\":\"PostsBlock_posts__error__2LtTg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3l1_E\",\"post__ava\":\"Post_post__ava__1LAfO\",\"post__info\":\"Post_post__info__dqO2e\",\"post__like\":\"Post_post__like__30jaf\"};","import React from 'react'\r\nimport { Redirect } from 'react-router'\r\n\r\nexport const AuthRedirect = Component => props => {\r\n    return !props.auth ? <Redirect to='/login' /> : <Component {...props} />\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile__flex_blog\":\"ProfileBlock_profile__flex_blog__13y1P\",\"profile__ava\":\"ProfileBlock_profile__ava__1mbrs\",\"profile__info\":\"ProfileBlock_profile__info__3L2An\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile__info\":\"Profile_profile__info__1k1DT\",\"profile__posts\":\"Profile_profile__posts__2udME\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lds_spinner\":\"preloader_lds_spinner__Z91i-\"};"],"sourceRoot":""}